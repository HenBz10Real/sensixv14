ewogICAgInJlbW92ZVNlbnNpdml0eSI6ICJjbWQgd2luZG93IHNpemUgcmVzZXQ7Y21kIHdpbmRvdyBkZW5zaXR5IHJlc2V0IiwKICAgICJqYXZhTGFuZ0hlYWR0cmljayI6ICJzZXR0aW5ncyBwdXQgZ2xvYmFsIGRpc2FibGVfZ2xfcmVuZGVyZXIgMTtzZXR0aW5ncyBwdXQgZ2xvYmFsIGNvbGxlY3Rfc3RhdHMgMDtjbWQgdGhlcm1hbHNlcnZpY2Ugb3ZlcnJpZGUtc3RhdHVzIDAiLAogICAgImphdmFMYW5nUmVtb3ZlSGVhZHRyaWNrIjogInNldHRpbmdzIGRlbGV0ZSBnbG9iYWwgZGlzYWJsZV9nbF9yZW5kZXJlcjtzZXR0aW5ncyBkZWxldGUgZ2xvYmFsIGNvbGxlY3Rfc3RhdHM7Y21kIHRoZXJtYWxzZXJ2aWNlIG92ZXJyaWRlLXN0YXR1cyAxIiwKICAgICJsaWJzTGFuZ09wdCI6ICJzZXR0aW5ncyBwdXQgc2VjdXJlIGxvY2F0aW9uX21vZGUgMDtkZXZpY2VfY29uZmlnIHB1dCBiYXR0ZXJ5IGFkYXB0aXZlX2JhdHRlcnlfbWFuYWdlbWVudF9lbmFibGVkIGZhbHNlO2RldmljZV9jb25maWcgcHV0IHBlcmZvcm1hbmNlIGlucHV0X2xhdGVuY3lfcmVkdWN0aW9uX2VuYWJsZWQgdHJ1ZTtwbSBjbGVhciBjb20ubWl1aS5wb3dlcmtlZXBlciIsCiAgICAibGlic0xhbmdPcHRSZW1vdmUiOiAic2V0dGluZ3MgZGVsZXRlIHNlY3VyZSBsb2NhdGlvbl9tb2RlO2RldmljZV9jb25maWcgZGVsZXRlIGJhdHRlcnkgYWRhcHRpdmVfYmF0dGVyeV9tYW5hZ2VtZW50X2VuYWJsZWQ7ZGV2aWNlX2NvbmZpZyBkZWxldGUgcGVyZm9ybWFuY2UgaW5wdXRfbGF0ZW5jeV9yZWR1Y3Rpb25fZW5hYmxlZCIsCiAgICAiZnBzSmF2YU9wdCI6ICJzZXR0aW5ncyBwdXQgc3lzdGVtIHBlYWtfcmVmcmVzaF9yYXRlIDEyMDtzZXR0aW5ncyBwdXQgc3lzdGVtIHVzZXJfcmVmcmVzaF9yYXRlIDEyMDtzZXR0aW5ncyBwdXQgc3lzdGVtIHRoZXJtYWxfbGltaXRfcmVmcmVzaF9yYXRlIDEyMCIsCiAgICAiZnBzSmF2YU9wdFJlbW92ZSI6ICJzZXR0aW5ncyBkZWxldGUgc3lzdGVtIHBlYWtfcmVmcmVzaF9yYXRlO3NldHRpbmdzIGRlbGV0ZSBzeXN0ZW0gdXNlcl9yZWZyZXNoX3JhdGU7c2V0dGluZ3MgZGVsZXRlIHN5c3RlbSB0aGVybWFsX2xpbWl0X3JlZnJlc2hfcmF0ZSIsCiAgICAic2Vuc2l2aXR5TWF4aW11bUxhbmciOiAic2V0dGluZ3MgcHV0IGdsb2JhbCBmb3JjZV9ncHVfcmVuZGVyaW5nIDE7c2V0dGluZ3MgZGVsZXRlIHN5c3RlbSBwb2ludGVyX3NwZWVkO2RldmljZV9jb25maWcgcHV0IGlucHV0IGZpbHRlcl90b3VjaF9pbnB1dCBmYWxzZTtwbSBjbGVhciBjb20ubWl1aS50b3VjaGFzc2lzdGFudCIsCiAgICAic2Vuc2l2aXR5TWF4aW11bVJlbW92ZUxhbmciOiAic2V0dGluZ3MgZGVsZXRlIGdsb2JhbCBmb3JjZV9ncHVfcmVuZGVyaW5nO2RldmljZV9jb2
